{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","fetch","response","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"4NAGMA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAavC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAqBhBZ,IAEfA,EAAYe,WAAa,CACrBd,cAAee,IAAUC,KAAKC,Y,YC5BrBC,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBACIC,IAAKF,EACLG,IAAKJ,IAET,4BAAIA,Q,uBCVHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,gDACkCK,EADlC,+DAEIE,MAAMP,GAFV,cAEbQ,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QARvB,kBAWZW,GAXY,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZzB,mBAAS,CAC/B8B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAU,WACNhB,EAAQC,GAAUgB,MAAK,SAAAC,GACnBH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAKlB,CAACZ,IAEGa,EDfiBK,CAAalB,GAA/BK,EAD+B,EAC/BA,KAAMO,EADyB,EACzBA,QAEZ,OACI,qCACI,oBAAIhB,UAAU,oCAAd,SAAmDI,IAElDY,GAAW,mBAAGhB,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEYS,EAAKE,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIf,aEY1B0B,EAvBM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,cAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQS,EAAWwB,KAAI,SAAAP,GACd,OAAO,cAAC,EAAD,CAENA,SAAUA,GADLA,YCb3BoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dd784a49.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory;\r\n\r\nAddCategory.protoTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img\r\n                src={url}\r\n                alt={title}\r\n            ></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","export const getGifs = async (category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=14OU3P89zioQ9a4JLyLMZL685IqEfDFA`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from \"react\";\r\nimport { GifGridItem } from './GifGridItem';\r\nimport {  useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    var { data, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">   \r\n                    {\r\n                        data.map(img => (\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                {...img} />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {  \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            }) \r\n        }\r\n        );\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport { GifGrid }  from './components/GifGrid'\r\n\r\n\r\nconst GifExpertApp = () => {\r\n \r\n    const [categories, setCategories] = useState(['One Punch'])\r\n \r\n    return (\r\n        <>\r\n            <h2>GiffExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr /> \r\n            <ol>\r\n                {\r\n                    categories.map(category => {\r\n                     return <GifGrid\r\n                      key={category}\r\n                      category={category} \r\n                      ></GifGrid>\r\n                    })  \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport  GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}